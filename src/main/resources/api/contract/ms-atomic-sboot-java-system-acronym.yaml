openapi: 3.0.3
info:
  title: System Acronym Registry
  version: v1
servers:
  - url: https://system-acronym.des.jstack.com.br
    description: DES
  - url: https://system-acronym.uat.jstack.com.br
    description: UAT
  - url: https://system-acronym.jstack.br.com.br
    description: PRD
security:
  - bearerAuth: [ ]
tags:
  - name: BusinessDomain
  - name: Team
  - name: ResponsibilityType
  - name: BusinessUnit
  - name: SystemAcronymResponsibility
  - name: SystemAcronym
  - name: SystemAcronymType
paths:
  /v1/teams:
    get:
      tags:
        - Team
      summary: List teams
      operationId: listTeams
      responses:
        '200':
          description: List of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Team
      summary: Create a team
      operationId: createTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/teams/{id}:
    get:
      tags:
        - Team
      summary: Get team by ID
      operationId: retrieveTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Team details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Team
      summary: Update team
      operationId: updateTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Team
      summary: Delete team
      operationId: deleteTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/responsibility-types:
    get:
      tags:
        - ResponsibilityType
      summary: List responsibility types
      operationId: listResponsibilityTypes
      responses:
        '200':
          description: List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponsibilityTypeResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - ResponsibilityType
      summary: Create responsibility type
      operationId: createResponsibilityType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsibilityTypeRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibilityTypeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/responsibility-types/{id}:
    get:
      tags:
        - ResponsibilityType
      summary: Get responsibility type by ID
      operationId: retrieveResponsibilityType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Responsibility type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibilityTypeResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ResponsibilityType
      summary: Update responsibility type
      operationId: updateResponsibilityType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsibilityTypeRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsibilityTypeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ResponsibilityType
      summary: Delete responsibility type
      operationId: deleteResponsibilityType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/system-acronym-responsibilities:
    get:
      tags:
        - SystemAcronymResponsibility
      summary: List system acronym responsibilities
      operationId: listSystemAcronymResponsibilities
      responses:
        '200':
          description: List of system acronym responsibilities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemAcronymResponsibilityResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - SystemAcronymResponsibility
      summary: Create a system acronym responsibility
      operationId: createSystemAcronymResponsibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemAcronymResponsibilityRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAcronymResponsibilityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/system-acronym-responsibilities/{id}:
    get:
      tags:
        - SystemAcronymResponsibility
      summary: Get system acronym responsibility by ID
      operationId: retrieveSystemAcronymResponsibility
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: System acronym responsibility
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAcronymResponsibilityResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SystemAcronymResponsibility
      summary: Update system acronym responsibility
      operationId: updateSystemAcronymResponsibility
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemAcronymResponsibilityRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAcronymResponsibilityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - SystemAcronymResponsibility
      summary: Delete system acronym responsibility
      operationId: deleteSystemAcronymResponsibility
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/system-acronym-types:
    get:
      tags:
        - SystemAcronymType
      summary: List acronym types
      operationId: listAcronymTypes
      responses:
        '200':
          description: List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemAcronymTypeResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - SystemAcronymType
      summary: Create a Acronym Type
      operationId: createAcronymType
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemAcronymTypeRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAcronymTypeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/system-acronym-types/{id}:
    get:
      tags:
        - SystemAcronymType
      summary: Get system acronym type by ID
      operationId: retrieveSystemAcronymType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: System acronym type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAcronymTypeResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SystemAcronymType
      summary: Update system acronym type
      operationId: updateSystemAcronymType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemAcronymTypeRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAcronymTypeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - SystemAcronymType
      summary: Delete system acronym type
      operationId: deleteSystemAcronymType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/business-units:
    get:
      tags:
        - BusinessUnit
      summary: List business units
      operationId: listBusinessUnits
      responses:
        '200':
          description: List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessUnitResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - BusinessUnit
      summary: Create business unit
      operationId: createBusinessUnit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessUnitRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUnitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/business-units/{id}:
    get:
      tags:
        - BusinessUnit
      summary: Get business unit by ID
      operationId: retrieveBusinessUnit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Business unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUnitResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - BusinessUnit
      summary: Update business unit
      operationId: updateBusinessUnit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessUnitRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUnitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - BusinessUnit
      summary: Delete business unit
      operationId: deleteBusinessUnit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/business-domains:
    get:
      tags:
        - BusinessDomain
      summary: List business domains
      operationId: listBusinessDomains
      responses:
        '200':
          description: List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomainResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - BusinessDomain
      summary: Create business domain
      operationId: createBusinessDomain
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessDomainRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessDomainResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/business-domains/{id}:
    get:
      tags:
        - BusinessDomain
      summary: Get business domain by ID
      operationId: retrieveBusinessDomain
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Business domain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessDomainResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - BusinessDomain
      summary: Update business domain
      operationId: updateBusinessDomain
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessDomainRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessDomainResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - BusinessDomain
      summary: Delete business domain
      operationId: deleteBusinessDomain
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/system-acronyms:
    get:
      tags:
        - SystemAcronym
      summary: List System Acronyms
      operationId: listSystemAcronyms
      parameters:
        - name: active
          in: query
          schema:
            type: boolean
        - name: typeId
          in: query
          schema:
            type: integer
            format: int64
        - name: domainId
          in: query
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of system acronyms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemAcronymResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - SystemAcronym
      summary: Create a system acronym
      operationId: createSystemAcronym
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemAcronymRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAcronymResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/system-acronyms/{id}:
    get:
      tags:
        - SystemAcronym
      summary: Get system acronym by ID
      operationId: retrieveSystemAcronym
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: System acronym details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAcronymResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - SystemAcronym
      summary: Update system acronym
      operationId: updateSystemAcronym
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemAcronymRequest'
      responses:
        '200':
          description: Updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAcronymResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - SystemAcronym
      summary: Soft delete a system acronym
      operationId: deleteSystemAcronym
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SystemAcronymTypeRequest:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          x-field-extra-annotation: '@Size(min=5,max=30, message = "{br.com.jstack.request.size}")'
        description:
          type: string
          x-field-extra-annotation: '@Size(min=10,max=255, message = "{br.com.jstack.request.size}")'
        active:
          type: boolean
    SystemAcronymTypeResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        SystemAcronymType:
          $ref: '#/components/schemas/SystemAcronymTypeRequest'
        Audit:
          $ref: '#/components/schemas/Audit'
    SystemAcronymRequest:
      type: object
      required:
        - name
      properties:
        acronym:
          type: string
          minLength: 1
        name:
          type: string
          x-field-extra-annotation: '@Size(min=5,max=30, message = "{br.com.jstack.request.size}")'
        description:
          type: string
          x-field-extra-annotation: '@Size(min=10,max=255, message = "{br.com.jstack.request.size}")'
        domainId:
          type: integer
          format: int64
        typeId:
          type: integer
          format: int64
        dev_team_id:
          type: integer
          format: int64
        biz_team_id:
          type: integer
          format: int64
        product_owner_name:
          type: string
        contact_email:
          type: string
        critical_for_operation:
          type: boolean
        has_personal_data:
          type: boolean
        security_level:
          type: string
        compliance_requirements:
          type: string
        documentation_url:
          type: string
        lifecycle_status:
          type: string
        go_live_date:
          type: string
          format: date
        sunset_date:
          type: string
          format: date
        active:
          type: boolean
    SystemAcronymResponse:
      properties:
        id:
          type: integer
          format: int64
        SystemAcronym:
          $ref: '#/components/schemas/SystemAcronymRequest'
        Audit:
          $ref: '#/components/schemas/Audit'
    TeamRequest:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          x-field-extra-annotation: '@Size(min=5,max=30, message = "{br.com.jstack.request.size}")'
        description:
          type: string
          x-field-extra-annotation: '@Size(min=10,max=255, message = "{br.com.jstack.request.size}")'
    TeamResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        Team:
          $ref: '#/components/schemas/TeamRequest'
        Audit:
          $ref: '#/components/schemas/Audit'
    ResponsibilityTypeRequest:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          x-field-extra-annotation: '@Size(min=5,max=30, message = "{br.com.jstack.request.size}")'
        description:
          type: string
          x-field-extra-annotation: '@Size(min=10,max=255, message = "{br.com.jstack.request.size}")'
        active:
          type: boolean
    ResponsibilityTypeResponse:
      properties:
        id:
          type: integer
          format: int64
        ResponsibilityType:
          $ref: '#/components/schemas/ResponsibilityTypeRequest'
        Audit:
          $ref: '#/components/schemas/Audit'
    SystemAcronymResponsibilityRequest:
      type: object
      required:
        - acronymId
        - responsibilityId
        - teamId
      properties:
        acronymId:
          type: integer
          format: int64
        name:
          type: string
          x-field-extra-annotation: '@Size(min=5,max=30, message = "{br.com.jstack.request.size}")'
        description:
          type: string
          x-field-extra-annotation: '@Size(min=10,max=255, message = "{br.com.jstack.request.size}")'
        responsibilityId:
          type: integer
          format: int64
        teamId:
          type: integer
          format: int64
        active:
          type: boolean
    SystemAcronymResponsibilityResponse:
      properties:
        id:
          type: integer
          format: int64
        SystemAcronymResponsibility:
          $ref: '#/components/schemas/SystemAcronymResponsibilityRequest'
        Audit:
          $ref: '#/components/schemas/Audit'
    BusinessDomainRequest:
      type: object
      required:
        - name
        - description
        - active
        - unitIds
      properties:
        name:
          type: string
          x-field-extra-annotation: '@Size(min=5,max=30, message = "{br.com.jstack.request.size}")'
        description:
          type: string
          x-field-extra-annotation: '@Size(min=10,max=255, message = "{br.com.jstack.request.size}")'
        active:
          type: boolean
        unitIds:
          type: array
          items:
            type: integer
            format: int64
    BusinessDomainResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          x-field-extra-annotation: '@Size(min=5,max=30, message = "{br.com.jstack.request.size}")'
        description:
          type: string
          x-field-extra-annotation: '@Size(min=10,max=255, message = "{br.com.jstack.request.size}")'
        active:
          type: boolean
        businessUnits:
          type: array
          items:
            $ref: '#/components/schemas/BusinessUnitResponse'
        Audit:
          $ref: '#/components/schemas/Audit'
    BusinessUnitRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          x-field-extra-annotation: '@Size(min=5,max=30, message = "{br.com.jstack.request.size}")'
        description:
          type: string
          x-field-extra-annotation: '@Size(min=10,max=255, message = "{br.com.jstack.request.size}")'
        active:
          type: boolean
    BusinessUnitResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        BusinessUnit:
          $ref: '#/components/schemas/BusinessUnitRequest'
        Audit:
          $ref: '#/components/schemas/Audit'
    Audit:
      type: object
      properties:
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedBy:
          type: string
        updatedAt:
          type: string
          format: date-time
    ErrorResponse:
      type: object
      required:
        - timestamp
        - codeStatus
        - messageStatus
        - errors
        - path
      properties:
        timestamp:
          type: string
          format: date-time
          example: '2025-06-25T12:34:56Z'
        codeStatus:
          type: integer
          format: int32
          example: 40X
        messageStatus:
          type: string
          example: Invalid input data
        errors:
          type: array
          items:
            type: string
          example:
            - "name: O campo deve conter no mínimo 1 caracteres."
            - "unitIds: A lista não pode estar vazia."
        path:
          type: string
          example: /v1/xxx
